if (void 0 === _etmc) var _etmc = []; Array.isArray || (Array.isArray = function (t) { return "[object Array]" === Object.prototype.toString.call(t) }); var _etmc_temp = _etmc; (_etmc = { debug: !1, setup: function (t) { for (var i = t.length, e = 0; e < i; e++)this.callFunc(t[e]) }, push: function (t) { this.tracking_disabled || this.callFunc(t) }, callFunc: function (t) { func_name = t[0], args = t.slice(1, 3), this[func_name](args) }, setOrgId: function (t) { !0 === Array.isArray(t[0]) ? this.org_id = t[0] : this.org_id = [t[0]] }, setUserInfo: function (t) { var i = t[0]; this.user_info && this.user_info.email && (i.email = this.user_info.email), this.user_info = i }, setFirstParty: function (t) { this.first_party = t[0] }, setInsecure: function (t) { this.insecure = t[0] }, doNotTrack: function () { this.tracking_disabled = !0 }, setConversionTrackingInfoFromUrl: function () { this.email_job_id = this.getURLParameter("sfmc_j") || this.getURLParameter("j"), this.email = this.getURLParameter("sfmc_e") || this.getURLParameter("e"), null != this.email && (this.user_info ? this.user_info.email = this.email : this.user_info = { email: this.email }), this.email_list_id = this.getURLParameter("sfmc_l") || this.getURLParameter("l"), this.email_landing_url_id = this.getURLParameter("sfmc_u") || this.getURLParameter("u"), this.email_job_batch_id = this.getURLParameter("sfmc_jb") || this.getURLParameter("jb"), this.email_subscriber_id = this.getURLParameter("sfmc_s") || this.getURLParameter("s") || this.getURLParameter("sfmc_sub"), this.mid = this.getURLParameter("sfmc_mid") || this.getURLParameter("mid") }, isEtConversionTracking: function () { return null != this.email_job_id && (null != this.email || null != this.email_subscriber_id) && null != this.email_list_id && null != this.email_landing_url_id && null != this.email_job_batch_id && null != this.mid }, getCurrentLocation: function () { return window.location.href }, trackPageView: function (t) { this.setConversionTrackingInfoFromUrl(); var i = t[0] || {}; this.org_id && (i.title = i.title || document.title, i.url = i.url || this.getCurrentLocation(), i.referrer = document.referrer, this.isEtConversionTracking() && (i.et_email = {}, i.et_email.job_id = this.email_job_id, i.et_email.list_id = this.email_list_id.replace(/\D+/, ""), i.et_email.landing_url_id = this.email_landing_url_id, i.et_email.job_batch_id = this.email_job_batch_id, i.et_email.subscriber_id = this.email_subscriber_id, i.et_email.mid = this.mid), this.sendDataWithImage("track_page_view", i)) }, trackCart: function (t) { var i = t[0] || {}; if (this.org_id) { var e = this.standardizeCart(i); "clear_cart" in i && (e.clear_cart = i.clear_cart), e.url = this.getCurrentLocation(), this.sendDataWithImage("track_cart", e) } }, trackConversion: function (t) { var i = t[0] || [], e = t[1]; if (this.org_id) { var r = this.standardizeCart(i); i.details ? r.details = i.details : e && ("details" in e && (r.details = e.details), "currency_code" in e && (r.currency_code = e.currency_code)), r.url = this.getCurrentLocation(), this.sendDataWithImage("track_conversion", r) } }, trackEvent: function (t) { }, trackWishlist: function (t) { var i = t[0] || []; this.org_id && i != [] && this.sendDataWithImage("track_wishlist", i) }, trackRating: function (t) { var i = t[0] || {}; this.org_id && null != i.rating && this.sendDataWithImage("track_rating", i) }, sendDataWithImage: function (t, i) { this.user_info && (i.user_info = this.user_info), this.org_id.length > 1 && (temp_org_id = [this.org_id.shift()], i.child_ids = this.org_id, this.org_id = temp_org_id); var e = encodeURIComponent(JSON.stringify(i)), r = "https"; !0 === this.insecure && "http:" === document.location.protocol && (r = "http"), this.first_party ? collect_url = this.first_party : collect_url = "nova.collect.igodigital.com"; var a = r + "://" + collect_url + "/c2/" + this.org_id + "/" + t + "?payload=" + e, n = document.createElement("img"); if (n.src = a, n.style.display = "none", n.width = "0", n.height = "0", n.title = "blank image", n.alt = "", n.setAttribute("aria-hidden", "true"), this.debug) console.log(i), console.log(n.outerHTML); else { var s = document.createElement("div"); s.style.display = "none", s.innerHTML = n.outerHTML, document.body.appendChild(s) } }, standardizeCart: function (t) { var i = {}; return !0 === Array.isArray(t) ? i = { cart: t } : "cart" in t ? i = t : "item" in t && (i = { cart: [t] }), i }, updateItem: function (t) { var i = t[0]; if (null !== i) { var e = null; Array.isArray(i) || (i = [i]); var r = []; for (var a in i) i.hasOwnProperty(a) && (this.setDefaultItemValues(i[a]), this.hasRequiredFields(i[a]) ? r.push(i[a]) : console.log("ETMC update_rec_item error: required fields were missing from " + JSON.stringify(i[a]))); r.length > 0 && (e = r), null !== e && this.sendDataWithImage("update_item", e) } }, getURLParameter: function (t) { var i = (new RegExp("[?|&]" + t + "=([^&;]+?)(&|#|;|$)").exec(window.location.search) || [, ""])[1].replace(/\+/g, "%20"); return decodeURIComponent(i) || null }, hasRequiredFields: function (t) { var i = void 0 !== t.item && void 0 !== t.url; if (i) { var e = t.item_type; this.shouldValidateName(e) ? i = null != t.name : "banner" === e && (i = void 0 !== t.image_url && (void 0 !== t.banner_size || void 0 !== t.location_size)) } return i }, shouldValidateName: function (t) { return null == t || "product" === t || "content" === t || "asset" === t }, setDefaultItemValues: function (t) { null == t.item_type && (t.item_type = "content"), null == t.url && (t.url = window.location.href), "banner" !== t.item_type && "asset" !== t.item_type && null == t.name && (t.name = document.title) } }).setup(_etmc_temp);